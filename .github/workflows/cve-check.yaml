name: CVE Check

on:
  workflow_dispatch:

jobs:
  trivy-vulnerability-check:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:

      - name: Debug
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - name: Set up JDK 17
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Create Gradle lockfiles
        run: ./gradlew resolveAndLockAll --write-locks

      - name: Check for vulnerabilities
        uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.11.2
        id: cve_check
        with:
          scan-type: 'fs'
          scanners: 'vuln'
          format: 'json'
          scan-ref: '.'
          severity: 'MEDIUM,HIGH,CRITICAL'
          exit-code: '1'
          ignore-policy: '.github/workflows/ignore-policy.rego'
          output: 'cve-result.json'

      - name: Prepare CVE Slack payload
        if: failure()
        run: |
          node -e '
            const fs = require("fs");
            const cveResult = JSON.parse(fs.readFileSync("./cve-result.json"));
          
            const getColoredCircle = severity => {
              switch (severity) {
                case "CRITICAL":
                  return ":red_circle:"
                case "HIGH":
                  return ":large_orange_circle:"
                case "MEDIUM":
                  return ":large_yellow_circle:"
                default:
                  return ""
              }
            };
          
            let output = {
              blocks: [
                {
                  type: "header",
                  text: {
                    type: "plain_text",
                    text: "sda-dropwizard-commons",
                    emoji: true,
                  },
                },
              ],
            };
          
            cveResult.Results.filter(
              (result) => result.Vulnerabilities !== undefined
            ).forEach((result) => {
                output.blocks.push({type: "divider"});
                output.blocks.push({
                  type: "section",
                  text: {
                    type: "mrkdwn",
                    text: `*${result.Target}*`,
                  },
                });
                result.Vulnerabilities.forEach((vuln) => {
                  output.blocks.push({
                    type: "section",
                    fields: [
                      {
                        type: "mrkdwn",
                        text: `*Severity:*\n ${getColoredCircle(vuln.Severity)} ${vuln.Severity}`,
                      },
                      {
                        type: "mrkdwn",
                        text: `*Dependency:*\n${vuln.PkgName}:${vuln.InstalledVersion}`,
                      },
                      {
                        type: "mrkdwn",
                        text: `*Since*:\n ${vuln.PublishedDate}`,
                      },
                      {
                        type: "mrkdwn",
                        text: `*VulnerabilityID*:\n <${vuln.PrimaryURL}|${vuln.VulnerabilityID}>`,
                      },
                    ],
                  });
                });
            });   
            try {
              fs.writeFileSync("./cve-slack-payload.json", JSON.stringify(output))
            } catch (err) {
                console.error(err);
            }
          '


      - name: Notify CVEs in Slack
        if: failure()
        uses: slackapi/slack-github-action@e28cf165c92ffef168d23c5c9000cffc8a25e117 # v1.24.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: 'URGSVQ403' #'sda-dropwizard-commons-security'
          payload-file-path: './cve-slack-payload.json'

      - name: Notify no CVEs in Slack
        if: success()
        uses: slackapi/slack-github-action@e28cf165c92ffef168d23c5c9000cffc8a25e117 # v1.24.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: 'URGSVQ403' #'sda-dropwizard-commons-security'
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ github.event.repository.name }}",
                    "emoji": true
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": ":large_green_circle:  No CVEs found!"
                    }
                  ]
                }
              ]
            }
